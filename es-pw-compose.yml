version: '3.7'
services:
  es01:
    image: elasticsearch/elasticsearch:7.9.3
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=elastic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/certs/elastic-certificates.p12
      - ./elasticsearch/config/es01/http.p12:/usr/share/elasticsearch/config/certs/http.p12
      - /Users/chenggang/data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
  es02:
    image: elasticsearch/elasticsearch:7.9.3
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=elastic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/certs/elastic-certificates.p12
      - ./elasticsearch/config/es02/http.p12:/usr/share/elasticsearch/config/certs/http.p12
      - /Users/chenggang/data02:/usr/share/elasticsearch/data
  es03:
    image: elasticsearch/elasticsearch:7.9.3
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=elastic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/certs/elastic-certificates.p12
      - ./elasticsearch/config/es03/http.p12:/usr/share/elasticsearch/config/certs/http.p12
      - /Users/chenggang/data03:/usr/share/elasticsearch/data
  kibana:
    image: kibana:7.9.3
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      - ./kibana/config/elasticsearch-ca.pem:/usr/share/kibana/config/certs/elasticsearch-ca.pem
      - ./kibana/config/kibana-server.crt:/usr/share/kibana/config/certs/kibana-server.crt
      - ./kibana/config/kibana-server.key:/usr/share/kibana/config/certs/kibana-server.key
    ports:
      - 5601:5601
    environment:
      KIBANA_SYSTEM_PASSWORD: elastic
    depends_on:
      - es01
      - es02
      - es03
    restart: unless-stopped
  metricbeat:
    build:
      context: extensions/metricbeat/
      args:
        ELASTIC_VERSION: 7.9.3
    # Run as 'root' instead of 'metricbeat' (uid 1000) to allow reading
    # 'docker.sock' and the host's filesystem.
    user: root
    command:
      # Log to stderr.
      - -e
      # Disable config file permissions checks. Allows mounting
      # 'config/metricbeat.yml' even if it's not owned by root.
      # see: https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
      # Mount point of the hostâ€™s filesystem. Required to monitor the host
      # from within a container.
      - --system.hostfs=/hostfs
    volumes:
      - ./extensions/metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro,Z
      - ./extensions/metricbeat/config/elasticsearch-ca.pem:/usr/share/metricbeat/config/certs/elasticsearch-ca.pem
      - type: bind
        source: /
        target: /hostfs
        read_only: true
      - type: bind
        source: /sys/fs/cgroup
        target: /hostfs/sys/fs/cgroup
        read_only: true
      - type: bind
        source: /proc
        target: /hostfs/proc
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    environment:
      METRICBEAT_INTERNAL_PASSWORD: metricbeat
      MONITORING_INTERNAL_PASSWORD: monitor
      BEATS_SYSTEM_PASSWORD: beats
    depends_on:
      - es01
      - es02
      - es03
  mysql:
    container_name: mysql8
    image: mysql/mysql:8.0
    env_file:
      - ./env/mysql.env
    volumes:
      - ./mysql8:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge